[{"path":"/articles/LineageDE-vignette.html","id":"example-running-lineage-de","dir":"Articles","previous_headings":"","what":"Example running Lineage DE","title":"LineageDE-vignette","text":"","code":"library(LineageDE)"},{"path":"/articles/LineageDE-vignette.html","id":"load-in-example-data","dir":"Articles","previous_headings":"","what":"Load in Example Data","title":"LineageDE-vignette","text":"example data already contains pseudotime results needed run LineageDE. See Pseudotime_Generation_vignette input generated. function samplePseudotime can utilized generate pseudotime results using Slingshot (Street et al. BMC Genomics 2018) input Data contains gene expression information (counts) across HSPCs (hematopoietic stem progenitor cells) two conditions (WT & IkBKO) two replicates (Rep1 & Rep2). (Data subsampled publication Singh et al.) ori.pseudotime ori.weights come original pseudotime calculation using data. sub.pseudotime sub.weights come pseudotime calculations subsets sampled data. Note: take advantage parallelization genes RhpcBLASctl installed, run following command avoid multithreaded operations:","code":"data(\"ExampleInputData\") #RhpcBLASctl::blas_set_num_threads(1)"},{"path":"/articles/LineageDE-vignette.html","id":"step-1-choose-appropriate-value-for-k","dir":"Articles","previous_headings":"","what":"Step 1: Choose appropriate value for k","title":"LineageDE-vignette","text":"first restrict potentially testing genes nonzero expression least 5% cells (mostly zero counts, model fitting fail k increases). example performed lineage number 1 & sampling 10 genes reduce runtime (set parallel = TRUE, n_cores = # make sampling genes faster; utilizes BiocParallel) analysis, choose value k AIC appears take minimum.","code":"genes2test = colnames(ExampleInputData$counts)[(Matrix::colSums(ExampleInputData$counts>0)>=(0.05*nrow(ExampleInputData$counts)))] #> Loading required package: Matrix #> Warning: package 'Matrix' was built under R version 4.1.3  length(genes2test) #> [1] 9810 k_results<-chooseK(ExampleInputData$counts, ExampleInputData$ori.pseudotimes, ExampleInputData$conditions, weights=ExampleInputData$ori.weights, experiments=ExampleInputData$experiments, linCompare=1, n=10, genes=genes2test, save.name = NULL) #> [1] \"Khk\" #> [1] \"Lrpap1\" #> [1] \"Ppp2r5d\" #> [1] \"Cdk8\" #> [1] \"Ube2j1\" #> [1] \"Rcl1\" #> [1] \"Apobec1\" #> [1] \"Panx1\" #> [1] \"Rad51b\" #> [1] \"Plbd2\" #> [1] \"choosing K done!\"  plot_AIC = k_results$AIC/k_results$AIC[, 1] plot(colnames(plot_AIC), apply(plot_AIC, 2, mean, na.rm=TRUE), pch=19, ylab=\"AIC\", xlab=\"k\") lines(colnames(plot_AIC), apply(plot_AIC, 2, mean, na.rm=TRUE))"},{"path":"/articles/LineageDE-vignette.html","id":"step-2-run-lineagede","dir":"Articles","previous_headings":"","what":"Step 2: Run LineageDE","title":"LineageDE-vignette","text":"prior analysis choose k = 3. example continue test lineage 1 & test 3 genes reduce runtime (set parallel = TRUE, n_cores = # make testing genes faster)","code":"k=3  DE_results<-LineageDE(genes=c(\"Hlf\", \"Tbp\"), ExampleInputData$counts, ExampleInputData$ori.pseudotimes, ExampleInputData$conditions, ori.weights=ExampleInputData$ori.weights, experiments=ExampleInputData$experiments, linCompare=1, k=k, samples=ExampleInputData$samples, sub.pseudotimes=ExampleInputData$sub.pseudotimes, sub.weights=ExampleInputData$sub.weights, save.name=\"None\") #> [1] \"running LineageDE\" #> [1] \"Hlf\" #> [1] \"Tbp\" #> [1] \"finished gene split 1 of 1\" #> [1] \"LineageDE done!\" head(DE_results) #>   gene              LRT          ori.pVal           emp.pVal          par.pVal #> 1  Hlf 145.730205320671                 0 0.0099009900990099                 0 #> 2  Tbp  5.3684300848538 0.146723190678519  0.297029702970297 0.287755672818664 #>    pVal.adj #> 1 0.0000000 #> 2 0.2877557"},{"path":"/articles/LineageDE-vignette.html","id":"step-3-plotting","dir":"Articles","previous_headings":"","what":"Step 3: Plotting","title":"LineageDE-vignette","text":"Plot Gene Expression Model Fit along Lineage","code":"plotGene(\"Hlf\", ExampleInputData$counts, ExampleInputData$ori.pseudotimes, ExampleInputData$conditions, weights = ExampleInputData$ori.weights, experiments = ExampleInputData$experiments, linCompare=1, k=3)"},{"path":"/articles/LineageDE-vignette.html","id":"alternative-uses","dir":"Articles","previous_headings":"","what":"Alternative Uses","title":"LineageDE-vignette","text":"LineageDE can also used compare different lineages within experiment want compare lineages 3 & 4 (can compare number lineages) one another rather compare two experimental conditions Now newData can plugged chooseK, LineageDE, plotGene presented linCompare=1 “conditions” carry information lineage Note: NA newData$ori.pseudotimes corresponds cells assignment lineages interest","code":"newData = convertInput(ExampleInputData$counts, ExampleInputData$ori.pseudotimes,c(3, 4), ori.weights=ExampleInputData$ori.weights, experiments=ExampleInputData$experiments, samples=ExampleInputData$samples, sub.pseudotimes=ExampleInputData$sub.pseudotimes, sub.weights=ExampleInputData$sub.weights)"},{"path":"/articles/Pseudotime_Generation_vignette.html","id":"example-generation-of-pseudotime-results-for-lineagede","dir":"Articles","previous_headings":"","what":"Example Generation of Pseudotime Results for LineageDE:","title":"Pseudotime_Generation_vignette","text":"utilize modified version samplePseudotime (samplePseudotime_HSPC) generates results like ExampleInputData provided LineageDE. function samplePseudotime can similarly utilized generate pseudotime data (samples) utilizing Slingshot (Street et al. BMC Genomics 2018). samplePseudotime can adapted pseudotime inference algorithms.","code":"library(LineageDE)"},{"path":"/articles/Pseudotime_Generation_vignette.html","id":"load-in-data-inputs","dir":"Articles","previous_headings":"","what":"Load in Data Inputs","title":"Pseudotime_Generation_vignette","text":"input Data contains HSPCs (hematopoietic stem progenitor cells) two conditions (WT & IkBKO) two replicates (Rep1 & Rep2). (Data subsampled publication Singh et al.) Already provided basic inputs Slingshot: cellData = PCA (dim reduction) coordinates clusters (utilized slingshot) specifies cluster cells belong (starting ending clusters provided slingshot) Note: take advantage parallelization along samples RhpcBLASctl installed, run following command avoid multithreaded operations:","code":"data(\"exPseudotimeInput\") #RhpcBLASctl::blas_set_num_threads(1)"},{"path":"/articles/Pseudotime_Generation_vignette.html","id":"generate-pseudotime-results","dir":"Articles","previous_headings":"","what":"Generate Pseudotime Results","title":"Pseudotime_Generation_vignette","text":"specified conditions (genotypes) experiments (replicates). starting cluster slingshot “HSC”. ending clusters “ErP”, “MkP”,“MyP”, “LyP”. specify pseudo.cond = “WT” wildtype cells utilized generate pseudotime trajectories (cells cellData projected onto trajectories used input LineageDE). nSamples increased (default 100) calculations can accelerated setting parallel = TRUE, n_cores = # (utilizes BiocParallel) Returned original sampled pseudotime results can utilized LineageDE.","code":"pseudoResults = samplePseudotime_HSPC(exPseudotimeInput$cellData, exPseudotimeInput$conditions, exPseudotimeInput$clusters, start.cluster=\"HSC\", end.clusters=c(\"ErP\", \"MkP\",\"MyP\", \"LyP\"), experiments=exPseudotimeInput$experiments, nSamples=10, pseudo.cond = \"WT\") #> [1] \"running original pseudotime analysis\" #> [1] \"running sampling pseudotime analysis\" #> [1] \"generating sample 1\" #> [1] \"generating sample 2\" #> [1] \"generating sample 3\" #> [1] \"generating sample 4\" #> [1] \"generating sample 5\" #> [1] \"generating sample 6\" #> [1] \"generating sample 7\" #> [1] \"generating sample 8\" #> [1] \"generating sample 9\" #> [1] \"generating sample 10\""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Apeksha Singh. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Singh (2024). LineageDE: LineageDE: Differential Gene Expression Testing Along Lineages. R package version 0.1.0.","code":"@Manual{,   title = {LineageDE: LineageDE: Differential Gene Expression Testing Along Lineages},   author = {Apeksha Singh},   year = {2024},   note = {R package version 0.1.0}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"author-apeksha-singh-apekshasinghguclaedu","dir":"","previous_headings":"Testing Differential Gene Expression Along Lineages (R package)","what":"Author: Apeksha Singh (apekshasingh@g.ucla.edu)","title":"LineageDE: Differential Gene Expression Testing Along Lineages","text":"Gene expression dynamics resulting pseudotime reconstruction fit using negative binomial generalized additive model (NB-GAM). Using NB-GAM, differential expression determined different conditions lineages using Likelihood Ratio Test. LineageDE implemented also accept multiple samples psuedotime input labels permuted construct null distribution.","code":""},{"path":"/index.html","id":"installation-instructions","dir":"","previous_headings":"Testing Differential Gene Expression Along Lineages (R package)","what":"Installation Instructions:","title":"LineageDE: Differential Gene Expression Testing Along Lineages","text":"(devtools already installed) install.packages(“devtools”) library(devtools) install_github(“apekshasingh/LineageDE”)","code":""},{"path":"/index.html","id":"documentation-and-examples","dir":"","previous_headings":"Testing Differential Gene Expression Along Lineages (R package)","what":"Documentation and Examples:","title":"LineageDE: Differential Gene Expression Testing Along Lineages","text":"Link","code":""},{"path":"/index.html","id":"source-code","dir":"","previous_headings":"Testing Differential Gene Expression Along Lineages (R package)","what":"Source Code:","title":"LineageDE: Differential Gene Expression Testing Along Lineages","text":"Link","code":""},{"path":[]},{"path":"/reference/chooseK.html","id":null,"dir":"Reference","previous_headings":"","what":"chooseK — chooseK","title":"chooseK — chooseK","text":"Fits alternative NB-GAM model random sample (n=100 default) genes different values k (number knots) returns average AIC.  Minimum AIC suggests value k downstream analysis.","code":""},{"path":"/reference/chooseK.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"chooseK — chooseK","text":"","code":"chooseK(   counts,   pseudotimes,   conditions,   weights = NULL,   experiments = NULL,   linCompare = 1,   n = 100,   k_vals = 1:9,   genes = NULL,   parallel = FALSE,   n_cores = NULL,   save.name = \"k_results.png\",   fit_time = 100,   seed = 123 )"},{"path":"/reference/chooseK.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"chooseK — chooseK","text":"counts matrix (size = cells genes) raw (integer) count values gene expression pseudotimes matrix (size = cells lineages) pseudotime values conditions factor (length = cells) specifying condition cell belongs weights matrix (size = cells lineages) weights pseudotime analysis applicable (otherwise NULL) experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) linCompare integer specifying lineage (index) test (defaults 1 - one lineage provided pseudotimes) n integer number genes randomly sample (default = 100) k_vals vector integers specifying number knots NB-GAM fit trial (default = c(1:9)) genes vector gene names indices sample desired (defaults NULL samples genes) parallel boolean specifying whether run parallel (requires BiocParallel) n_cores integer specifying number cores use running parallel save.name string specifying file name image AIC results saved (set NULL, image saved). Defaults \"k_results.png\". fit_time time permitted (seconds) NB-GAM fits single gene (defaults 100) seed set random seed","code":""},{"path":"/reference/chooseK.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"chooseK — chooseK","text":"list containing AIC, R2 (r squared), deviance explained values (matrix size = n length(k_vals))","code":""},{"path":"/reference/convertInput.html","id":null,"dir":"Reference","previous_headings":"","what":"convertInput — convertInput","title":"convertInput — convertInput","text":"compare gene expression two lineages pseudotime analysis rather comparing gene expression conditions across single lineage function can utilized convert pseudotime input make compatible LineageDE. copy cell created lineage output conditions correspond different lineages.","code":""},{"path":"/reference/convertInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convertInput — convertInput","text":"","code":"convertInput(   counts,   ori.pseudotimes,   linsCompare,   ori.weights = NULL,   experiments = NULL,   samples = NULL,   sub.pseudotimes = NULL,   sub.weights = NULL,   seed = 123 )"},{"path":"/reference/convertInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convertInput — convertInput","text":"counts matrix (size = cells genes) raw (integer) count values gene expression ori.pseudotimes matrix (size = cells lineages) pseudotime values linsCompare vector lineage indices compared (e.g. compare lineage 1 lineage 2, linsCompare = c(1, 2)) ori.weights matrix (size = cells lineages) weights pseudotime analysis applicable (otherwise NULL) experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) samples matrix (size = cells num_samples) specifying indices cells utilized sample pseudotime applicable (otherwise NULL) sub.pseudotimes matrix (size = cells lineages num_samples) samples pseudotime values applicable (otherwise NULL) sub.weights matrix (size = cells lineages num_samples) samples pseudotime weights applicable (otherwise NULL) seed set random seed","code":""},{"path":"/reference/convertInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convertInput — convertInput","text":"converted input form list containing counts, pseudotimes, weights, experiments (applicable), samples (applicable), generated conditions factor use LineageDE","code":""},{"path":"/reference/ExampleInputData.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Input Data for LineageDE — ExampleInputData","title":"Example Input Data for LineageDE — ExampleInputData","text":"list containing example input data run LineageDE","code":""},{"path":"/reference/ExampleInputData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Input Data for LineageDE — ExampleInputData","text":"","code":"data(ExampleInputData)"},{"path":"/reference/ExampleInputData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example Input Data for LineageDE — ExampleInputData","text":"counts matrix gene expression counts (cells x genes) conditions factor specifying experimental conditions experiments factor specifying experimental replicates ori.pseudotimes matrix pseudotime values (cells x lineages) ori.weights matrix pseudotime weights (cells x lineages) samples matrix cell indices sampled (cells x number_samples=100) sub.pseudotimes matrix sampled pseudotime values (cells x lineages x 100) sub.weights matrix sampled pseudotime weights (cells x lineages x 100)","code":""},{"path":"/reference/exPseudotimeInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Example Input for samplePsuedotime — exPseudotimeInput","title":"Example Input for samplePsuedotime — exPseudotimeInput","text":"list containing example input data run samplePseudotime_HSPC","code":""},{"path":"/reference/exPseudotimeInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example Input for samplePsuedotime — exPseudotimeInput","text":"","code":"data(exPseudotimeInput)"},{"path":"/reference/exPseudotimeInput.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example Input for samplePsuedotime — exPseudotimeInput","text":"cellData matrix PCA projection (cells x dimensions) conditions factor specifying experimental conditions experiments factor specifying experimental replicates clusters factor specifying input cluster cell (input Slingshot)","code":""},{"path":"/reference/LineageDE.html","id":null,"dir":"Reference","previous_headings":"","what":"LineageDE — LineageDE","title":"LineageDE — LineageDE","text":"Fits NB-GAM test alternative vs null model collection genes. Performs likelihood ratio test returns p-value based chi-squared distribution (ori.pVal) samples pseudotime provided, also perform permutation test give empirical p-value (emp.pVal) parametric p-value (par.pVal) fitting null distribution gamma distribution","code":""},{"path":"/reference/LineageDE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LineageDE — LineageDE","text":"","code":"LineageDE(   genes,   counts,   ori.pseudotimes,   conditions,   ori.weights = NULL,   experiments = NULL,   linCompare = 1,   k = 3,   samples = NULL,   sub.pseudotimes = NULL,   sub.weights = NULL,   parallel = FALSE,   n_cores = NULL,   output = NULL,   filePath = NULL,   save.name = NULL,   fit_time = 100,   seed = 123 )"},{"path":"/reference/LineageDE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LineageDE — LineageDE","text":"genes vector names indices specifying genes tested counts matrix (size = cells genes) raw (integer) count values gene expression ori.pseudotimes matrix (size = cells lineages) pseudotime values conditions factor (length = cells) specifying condition cell belongs ori.weights matrix (size = cells lineages) weights pseudotime analysis applicable (otherwise NULL) experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) linCompare integer specifying lineage (index) test (defaults 1 - one lineage provided pseudotimes) k integer specifying number knots NB-GAM fit (default = 3) samples matrix (size = cells num_samples) specifying indices cells utilized sample pseudotime applicable (otherwise NULL) sub.pseudotimes matrix (size = cells lineages num_samples) samples pseudotime values applicable (otherwise NULL) sub.weights matrix (size = cells lineages num_samples) samples pseudotime weights applicable (otherwise NULL) parallel boolean specifying whether run parallel (requires BiocParallel) n_cores integer specifying number cores use running parallel output integer specifying often output results csv file (number genes).  Defaults NULL (output genes completed). filePath string specifying path directory files saved (Defaults current working directory) save.name string specifying prefix name saved csv files (Defaults \"DE_results\"). Specify \"None\" want save output csv. fit_time time permitted (seconds) NB-GAM fits single gene (defaults 100) seed set random seed","code":""},{"path":"/reference/LineageDE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LineageDE — LineageDE","text":"dataframe LRT, ori.pVal, (emp.pVal), (par.pVal) gene tested","code":""},{"path":"/reference/plotGene.html","id":null,"dir":"Reference","previous_headings":"","what":"plotGene — plotGene","title":"plotGene — plotGene","text":"Plots expression gene interest pseudotime single lineage. Plots CPM NB-GAM fits separated specified conditions.","code":""},{"path":"/reference/plotGene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotGene — plotGene","text":"","code":"plotGene(   gene,   counts,   pseudotimes,   conditions,   weights = NULL,   experiments = NULL,   linCompare = 1,   k = 3,   seed = 123 )"},{"path":"/reference/plotGene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotGene — plotGene","text":"gene name index gene plot counts matrix (size = cells genes) raw (integer) count values gene expression pseudotimes matrix (size = cells lineages) pseudotime values conditions factor (length = cells) specifying condition cell belongs weights matrix (size = cells lineages) weights pseudotime analysis applicable (otherwise NULL) experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) linCompare integer specifying lineage (index) plot (defaults 1 - one lineage provided pseudotimes) k integer specifying number knots NB-GAM fit (default = 3) seed set random seed","code":""},{"path":"/reference/plotGene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotGene — plotGene","text":"ggplot object","code":""},{"path":"/reference/samplePseudotime.html","id":null,"dir":"Reference","previous_headings":"","what":"samplePseudotime — samplePseudotime","title":"samplePseudotime — samplePseudotime","text":"Provides functionality generate multiple samplings pseudotime using package slingshot generate pseudotime trajectories.  output can used input LineageDE.  function can modified incorporate pseudotime algorithms.","code":""},{"path":"/reference/samplePseudotime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"samplePseudotime — samplePseudotime","text":"","code":"samplePseudotime(   cellData,   conditions,   clusters,   start.cluster,   end.clusters,   experiments = NULL,   nSamples = 100,   pseudo.cond = NULL,   pseudo.data = NULL,   parallel = FALSE,   n_cores = NULL,   seed = 123 )"},{"path":"/reference/samplePseudotime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"samplePseudotime — samplePseudotime","text":"cellData matrix (size = cells dimensions) PCA projection (dim reduc) representation cells conditions factor (length = cells) specifying condition cell belongs clusters factors (length = cells) specifying input cluster cell belongs.  Input clusters allow slingshot create initial MST. start.cluster string specifying name cluster lineages begin end.clusters vectors string specifying names clusters lineages terminate experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) nSamples integer specifying number samples generate (defaults 100) pseudo.cond specifies name condition used build pseudotime trajectory (defaults NULL uses cells) pseudo.data matrix alternative cells' PCA projections (dim reduc) use build pseudotime trajectories.  cellData projected onto trajectories. parallel boolean specifying whether run parallel (requires BiocParallel) n_cores integer specifying number cores use running parallel seed set random seed","code":""},{"path":"/reference/samplePseudotime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"samplePseudotime — samplePseudotime","text":"list pseudotime inputs utilized LineageDE (ori.pseudotimes, ori.weights, samples, sub.pseudotimes, sub.weights)","code":""},{"path":"/reference/samplePseudotime_HSPC.html","id":null,"dir":"Reference","previous_headings":"","what":"samplePseudotime_HSPC — samplePseudotime_HSPC","title":"samplePseudotime_HSPC — samplePseudotime_HSPC","text":"modified version samplePseudotime break derived pseudotime trajectories HSPCs HSC primed progenitor lineages.  Furthermore adjust weights account differences projection distances derived trajectories.","code":""},{"path":"/reference/samplePseudotime_HSPC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"samplePseudotime_HSPC — samplePseudotime_HSPC","text":"","code":"samplePseudotime_HSPC(   cellData,   conditions,   clusters,   start.cluster,   end.clusters,   experiments,   nSamples = 100,   pseudo.cond = NULL,   pseudo.data = NULL,   parallel = FALSE,   n_cores = NULL,   seed = 123 )"},{"path":"/reference/samplePseudotime_HSPC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"samplePseudotime_HSPC — samplePseudotime_HSPC","text":"cellData matrix (size = cells dimensions) PCA projection (dim reduc) representation cells conditions factor (length = cells) specifying condition cell belongs clusters factors (length = cells) specifying input cluster cell belongs.  Input clusters allow slingshot create initial MST. start.cluster string specifying name cluster lineages begin end.clusters vectors string specifying names clusters lineages terminate experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) nSamples integer specifying number samples generate (defaults 100) pseudo.cond specifies name condition used build pseudotime trajectory (defaults NULL uses cells) pseudo.data matrix alternative cells' PCA projections (dim reduc) use build pseudotime trajectories.  cellData projected onto trajectories. parallel boolean specifying whether run parallel (requires BiocParallel) n_cores integer specifying number cores use running parallel seed set random seed","code":""},{"path":"/reference/samplePseudotime_HSPC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"samplePseudotime_HSPC — samplePseudotime_HSPC","text":"list pseudotime inputs utilized LineageDE (ori.pseudotimes, ori.weights, samples, sub.pseudotimes, sub.weights)","code":""},{"path":"/reference/testGene.html","id":null,"dir":"Reference","previous_headings":"","what":"testGene — testGene","title":"testGene — testGene","text":"Fits NB-GAM test alternative vs null model specific gene.  Helper function LineageDE. Performs likelihood ratio test returns p-value based chi-squared distribution (ori.pVal) samples pseudotime provided, also perform permutation test give empirical p-value (emp.pVal) parametric p-value (par.pVal) fitting null distribution gamma distribution","code":""},{"path":"/reference/testGene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"testGene — testGene","text":"","code":"testGene(   gene,   counts,   ori.pseudotimes,   ori.weights,   conditions,   experiments,   offsets,   knotList,   k,   samples,   sub.pseudotimes,   sub.weights,   fit_time,   seed )"},{"path":"/reference/testGene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"testGene — testGene","text":"gene names index specifying gene tested counts matrix (size = cells genes) raw (integer) count values gene expression ori.pseudotimes matrix (size = cells lineages) pseudotime values ori.weights matrix (size = cells lineages) weights pseudotime analysis applicable (otherwise NULL) conditions factor (length = cells) specifying condition cell belongs experiments factor (length = cells) specifying replicate/batch cell belongs applicable (otherwise NULL) offsets offset used fitting NB-GAM based library size cell knotList list specifying knot locations used NB-GAM fit k integer specifying number knots NB-GAM fit samples matrix (size = cells num_samples) specifying indices cells utilized sample pseudotime applicable (otherwise NULL) sub.pseudotimes matrix (size = cells lineages num_samples) samples pseudotime values applicable (otherwise NULL) sub.weights matrix (size = cells lineages num_samples) samples pseudotime weights applicable (otherwise NULL) fit_time time permitted (seconds) NB-GAM fit single gene seed set random seed","code":""},{"path":"/reference/testGene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"testGene — testGene","text":"LRT, ori.pVal, (emp.pVal), (par.pVal) gene tested","code":""}]
